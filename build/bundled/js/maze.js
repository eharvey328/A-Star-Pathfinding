function initMaze(e,l,r){nCols=cols,nRows=rows,w=e,nCols=floor(width/w),nRows=floor(height/w),cells=[],stack=[],current=null;for(var n=0;n<nRows;n++)for(var s=0;s<nCols;s++){var t=new Cell(s,n,cells);cells.push(t)}setPath(l,r),current=cells[0]}function setPath(e,l){cells[e].start=!0,cells[l].end=!0}function drawGrid(e,l){cells[e].show(color(0,230,118,200)),cells[l].show(color(255,234,0,200));for(var r=0;r<cells.length;r++)cells[r].show(color(0,0,0,16))}function removeWalls(e,l){var r=e.i-l.i;1===r?(e.walls[3]=!1,l.walls[1]=!1):r===-1&&(e.walls[1]=!1,l.walls[3]=!1);var n=e.j-l.j;1===n?(e.walls[0]=!1,l.walls[2]=!1):n===-1&&(e.walls[2]=!1,l.walls[0]=!1)}function generateMaze(){current.visited=!0,current.highlight();var e=current.checkNeighbors();return e?(e.visited=!0,stack.push(current),removeWalls(current,e),current=e):stack.length>0&&(current=stack.pop()),!(stack.length>0)}function index(e,l){return e<0||l<0||e>nCols-1||l>nRows-1?-1:e+l*nCols}function initPathfinder(e,l){for(var r=0;r<nCols;r++)for(var n=0;n<nRows;n++)cells[index(r,n)].addNeighbors(cells);var e=cells[e],l=cells[l];"astar"==alg?pathfinder=new AStar(e,l):pathfinder=new dijkstra(e,l)}function pathfindMaze(e,l,r){if(background(color(48,48,48)),drawGrid(l,r),0!=e||paused||(isDone=generateMaze()),isDone&&0==e&&(paused=!0),1==e){count>0&&(initPathfinder(l,r),count--),stepSearch();for(var n=0;n<pathfinder.closedSet.length;n++)pathfinder.closedSet[n].show(color(255,0,0,50));for(var n=0;n<pathfinder.openSet.length;n++){var s=pathfinder.openSet[n];s.show(color(0,255,0,50))}fill(0);var t=calcPath(pathfinder.lastCheckedNode);drawPath(t)}}var nCols,nRows;